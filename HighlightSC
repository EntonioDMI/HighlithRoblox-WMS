-- Check if the script has already been executed
if _G.HighlightScriptExecuted then
    return
end

_G.HighlightScriptExecuted = true

local TweenService = game:GetService("TweenService")

local function startHighlighting()
    local settings = {
        DefaultColor = Color3.fromRGB(255, 255, 0),
        HoverColor = Color3.fromRGB(255, 0, 0),
        FillTransparency = 0.5,
        OutlineTransparency = 0.3,
        RainbowEnabled = true,
        UpdateInterval = 0.1,
        RainbowSpeed = 1,
        HoverTweenTime = 0.3
    }

    local players = game.Players
    local localPlayer = players.LocalPlayer
    local mouse = localPlayer:GetMouse()
    local currentHoveredCharacter = nil
    local rainbowTime = 0

    local function createOrUpdateHighlight(character, color)
        local highlight = character:FindFirstChildOfClass("Highlight")
        if not highlight then
            highlight = Instance.new("Highlight")
            highlight.Adornee = character
            highlight.Parent = character
        end
        highlight.FillColor = color or settings.DefaultColor
        highlight.FillTransparency = settings.FillTransparency
        highlight.OutlineTransparency = settings.OutlineTransparency
    end

    local function getRainbowColor(t)
        local r = math.sin(t * settings.RainbowSpeed) * 127 + 128
        local g = math.sin(t * settings.RainbowSpeed + 2) * 127 + 128
        local b = math.sin(t * settings.RainbowSpeed + 4) * 127 + 128
        return Color3.fromRGB(r, g, b)
    end

    local function tweenToColor(character, targetColor)
        local highlight = character:FindFirstChildOfClass("Highlight")
        if highlight then
            local tweenInfo = TweenInfo.new(settings.HoverTweenTime, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
            local goal = {FillColor = targetColor}
            TweenService:Create(highlight, tweenInfo, goal):Play()
        end
    end

    local function onPlayerAdded(player)
        if player == localPlayer then return end

        local function onCharacterAdded(character)
            createOrUpdateHighlight(character)
        end

        if player.Character then
            onCharacterAdded(player.Character)
        end
        player.CharacterAdded:Connect(onCharacterAdded)
    end

    players.PlayerAdded:Connect(onPlayerAdded)

    for _, player in ipairs(players:GetPlayers()) do
        onPlayerAdded(player)
    end

    task.spawn(function()
        while true do
            for _, player in ipairs(players:GetPlayers()) do
                if player ~= localPlayer then
                    local character = workspace:FindFirstChild(player.Name)
                    if character then
                        if mouse.Target and mouse.Target:IsDescendantOf(character) then
                            if currentHoveredCharacter ~= character then
                                currentHoveredCharacter = character
                                tweenToColor(character, settings.HoverColor)
                            end
                        else
                            if currentHoveredCharacter == character then
                                currentHoveredCharacter = nil
                            end
                            if settings.RainbowEnabled then
                                tweenToColor(character, getRainbowColor(rainbowTime))
                            else
                                tweenToColor(character, settings.DefaultColor)
                            end
                        end
                    end
                end
            end
            rainbowTime = rainbowTime + settings.UpdateInterval
            task.wait(settings.UpdateInterval)
        end
    end)
end

startHighlighting()
